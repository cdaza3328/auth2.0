name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      MONGODB_URI: mongodb://localhost:27017/test-db
      JWT_SECRET: fake-jwt
      GOOGLE_CLIENT_ID: fake-client-id
      GOOGLE_CLIENT_SECRET: fake-client-secret
      SERVER_URL: http://localhost:8000

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Ver estructura del proyecto
        run: ls -R

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Backend - Instalar dependencias
        run: npm install
        working-directory: backend

      - name: Backend - Ejecutar pruebas
        run: npm test
        working-directory: backend

      - name: Frontend - Instalar dependencias
        run: npm install
        working-directory: frontend

      - name: Frontend - Ejecutar pruebas
        run: npm test -- --watchAll=false
        working-directory: frontend

      # ❌ Estas dos secciones ya no son necesarias porque Cypress usará el frontend en Vercel
      # - name: Frontend - Iniciar servidor en segundo plano
      #   run: npm start &
      #   working-directory: frontend

      # - name: Esperar a que el frontend esté disponible
      #   run: |
      #     n=0
      #     until [ $n -ge 10 ]
      #     do
      #       curl -s http://localhost:3000 && break
      #       n=$((n+1))
      #       echo "⏳ Esperando que el frontend arranque..."
      #       sleep 5
      #     done

      - name: Cypress E2E Tests
        run: npx cypress run
        working-directory: frontend
